// Code generated by mockery v1.0.0
package mocks

import context "context"

import mock "github.com/stretchr/testify/mock"
import protos "github.com/hieven/go-instagram/src/protos"

// Media is an autogenerated mock type for the Media type
type Media struct {
	mock.Mock
}

// Like provides a mock function with given fields: _a0, _a1
func (_m *Media) Like(_a0 context.Context, _a1 *protos.MediaLikeRequest) (*protos.MediaLikeResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *protos.MediaLikeResponse
	if rf, ok := ret.Get(0).(func(context.Context, *protos.MediaLikeRequest) *protos.MediaLikeResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protos.MediaLikeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *protos.MediaLikeRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Unlike provides a mock function with given fields: _a0, _a1
func (_m *Media) Unlike(_a0 context.Context, _a1 *protos.MediaUnlikeRequest) (*protos.MediaUnlikeResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *protos.MediaUnlikeResponse
	if rf, ok := ret.Get(0).(func(context.Context, *protos.MediaUnlikeRequest) *protos.MediaUnlikeResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protos.MediaUnlikeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *protos.MediaUnlikeRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
