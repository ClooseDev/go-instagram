// Code generated by mockery v1.0.0
package mocks

import context "context"

import mock "github.com/stretchr/testify/mock"
import protos "github.com/hieven/go-instagram/src/protos"

// Thread is an autogenerated mock type for the Thread type
type Thread struct {
	mock.Mock
}

// ApproveAll provides a mock function with given fields: _a0, _a1
func (_m *Thread) ApproveAll(_a0 context.Context, _a1 *protos.ThreadApproveAllRequest) (*protos.ThreadApproveAllResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *protos.ThreadApproveAllResponse
	if rf, ok := ret.Get(0).(func(context.Context, *protos.ThreadApproveAllRequest) *protos.ThreadApproveAllResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protos.ThreadApproveAllResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *protos.ThreadApproveAllRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BroadcastLink provides a mock function with given fields: _a0, _a1
func (_m *Thread) BroadcastLink(_a0 context.Context, _a1 *protos.ThreadBroadcastLinkRequest) (*protos.ThreadBroadcastLinkResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *protos.ThreadBroadcastLinkResponse
	if rf, ok := ret.Get(0).(func(context.Context, *protos.ThreadBroadcastLinkRequest) *protos.ThreadBroadcastLinkResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protos.ThreadBroadcastLinkResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *protos.ThreadBroadcastLinkRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BroadcastText provides a mock function with given fields: _a0, _a1
func (_m *Thread) BroadcastText(_a0 context.Context, _a1 *protos.ThreadBroadcastTextRequest) (*protos.ThreadBroadcastTextResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *protos.ThreadBroadcastTextResponse
	if rf, ok := ret.Get(0).(func(context.Context, *protos.ThreadBroadcastTextRequest) *protos.ThreadBroadcastTextResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protos.ThreadBroadcastTextResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *protos.ThreadBroadcastTextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Show provides a mock function with given fields: _a0, _a1
func (_m *Thread) Show(_a0 context.Context, _a1 *protos.ThreadShowRequest) (*protos.ThreadShowResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *protos.ThreadShowResponse
	if rf, ok := ret.Get(0).(func(context.Context, *protos.ThreadShowRequest) *protos.ThreadShowResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protos.ThreadShowResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *protos.ThreadShowRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
